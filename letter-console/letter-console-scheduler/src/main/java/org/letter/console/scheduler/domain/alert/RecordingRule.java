package org.letter.console.scheduler.domain.alert;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;
import org.letter.console.base.BaseEntity;

import java.io.Serializable;

/**
 * RecordingRule
 *
 * @author letter
 */
@Getter
@Setter
@Entity
@Table(name = "recording_rule")
public class RecordingRule extends BaseEntity implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @Schema(description = "The unique identifier of the recording rule.")
    private Long id;

    @Column(name = "group_id", nullable = false)
    @Schema(description = "The ID of the business group associated with the recording rule.")
    private Long groupId;

    @Column(name = "datasource_ids", length = 255, nullable = false)
    @Schema(description = "Datasource IDs associated with the recording rule.")
    private String datasourceIds;

    @Column(name = "cluster", length = 128, nullable = false)
    @Schema(description = "The cluster associated with the recording rule.")
    private String cluster;

    @Column(name = "name", length = 255, nullable = false)
    @Schema(description = "The name of the new metric generated by the recording rule.")
    private String name;

    @Column(name = "note", length = 255, nullable = false)
    @Schema(description = "Note describing the recording rule.")
    private String note;

    @Column(name = "disabled", nullable = false)
    @Schema(description = "Indicates if the recording rule is disabled.")
    private Boolean disabled;

    @Column(name = "prom_ql", length = 8192, nullable = false)
    @Schema(description = "PromQL query associated with the recording rule.")
    private String promQl;

    @Column(name = "prom_eval_interval", nullable = false)
    @Schema(description = "Evaluation interval of the recording rule.")
    private Integer promEvalInterval;

    @Column(name = "append_tags", length = 255, nullable = false)
    @Schema(description = "Tags appended to the generated metric, separated by spaces.")
    private String appendTags;

    @Column(name = "query_configs", columnDefinition = "TEXT", nullable = false)
    @Schema(description = "Query configurations associated with the recording rule.")
    private String queryConfigs;
	
}
